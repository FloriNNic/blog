import org.gradle.api.tasks.Exec

task initDOT {
   String projectDir = "."
   doLast {
   if(! new File("${projectDir}/dita-ot/oxygen-publishing-engine/").exists()){
       //https://www.oxygenxml.com/InstData/PublishingEngine/oxygen-publishing-engine.zip
       //https://archives.oxygenxml.com/Nightly/PublishingEngine/oxygen-publishing-engine.zip
       ant.get(src: 'https://www.oxygenxml.com/InstData/PublishingEngine/oxygen-publishing-engine.zip', dest: "${projectDir}/dita-ot.zip", skipexisting: 'true')
       ant.unzip(src: "${projectDir}/dita-ot.zip", dest: 'dita-ot')
       new File("${projectDir}/dita-ot/oxygen-publishing-engine/licensekey.txt").write(System.getenv( 'LICENSE_KEY' ).replaceAll("  ", "\n"))
    }
  }
}

task runTransformation(type:Exec, dependsOn: [initDOT]) {
 workingDir "${projectDir}/dita-ot/oxygen-publishing-engine/bin"
 commandLine "sh", "${projectDir}/dita-ot/oxygen-publishing-engine/bin/dita", "--output=.", "--project", "${projectDir}/../blog-project.xml"
}

task copySite(type: Copy, dependsOn: [runTransformation]) {
    from "${projectDir}/dita-ot/oxygen-publishing-engine/bin/site"
    into "${projectDir}/../site"
}

task copyResources(type: Copy) {
    from "${projectDir}/../resources/"
    into "${projectDir}/../site/resources"
}

task initValidation {
 String projectDir = "."
 doLast {
 if(! new File("${projectDir}/extracted/oxygen/").exists()){
   ant.get(src: 'https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz', dest: "${projectDir}/oxygen.tar.gz", skipexisting: 'true')
   ant.untar(src: "${projectDir}/oxygen.tar.gz", dest: "${projectDir}/extracted", compression: 'gzip')
   new File("${projectDir}/extracted/oxygen/scriptinglicensekey.txt").write(System.getenv( 'SCRIPTING_LICENSE_KEY' ).replaceAll("  ", "\n"))
  }
 }
}

task runValidation(type:Exec, dependsOn: [initValidation]) {
  File projectDirFile = new File(System.getProperty("user.dir"), "/../").getCanonicalFile();
  File buildDirFile = new File(System.getProperty("user.dir")).getCanonicalFile();
  workingDir "${projectDir}/extracted/oxygen";
  ignoreExitValue true;
  commandLine "sh", "${buildDirFile.getAbsolutePath()}/extracted/oxygen/scripts/validateCheckDITA.sh", "-i", "${projectDirFile.getAbsolutePath()}/blog-project.xml", "-r", "${buildDirFile.getAbsolutePath()}/extracted/oxygen/validationReport.xml";
  doLast {
        String reportText = new File("${buildDirFile.getAbsolutePath()}/extracted/oxygen/validationReport.xml").text;
        if(reportText.contains("<incident>")) {
            ant {
              xslt(
                 in: "${buildDirFile.getAbsolutePath() + '/extracted/oxygen/validationReport.xml'}",
                 out: "${projectDirFile.getAbsolutePath() + '/validationReport.md'}",
                 force: "true",
                 style: "${buildDirFile.getAbsolutePath() + '/validationReport.xsl'}"
              )
           }
       }
 }
}

task dist(dependsOn: [copySite, copyResources])

defaultTasks 'dist'
